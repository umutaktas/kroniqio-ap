# nginx-kroniq-unified.conf
# Tek nginx config - Uygulama development veya production modda çalışır

server {
    listen 80;
    server_name kroniq.io www.kroniq.io;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name kroniq.io www.kroniq.io;

    # SSL Certificates
    ssl_certificate /etc/ssl/certs/cloudflare-kroniq.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare-kroniq.key;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    server_tokens off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Cloudflare Real IP
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;

    # Client settings
    client_max_body_size 100m;

    # ACTIVEPIECES PROXYING
    # Development: Frontend port 4200, Backend port 3000
    # Production: Single port 8080 serves everything

    # Main application
    location / {
        # Try local port 8080 first (production)
        # Falls back to port 4200 (development)
        proxy_pass http://127.0.0.1:8080;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 900s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 900s;

        # SSE and WebSocket support
        proxy_buffering off;
        proxy_cache off;
    }

    # API endpoints - Always port 8080 (production) or 3000 (development backend)
    location /api/ {
        proxy_pass http://127.0.0.1:8080/api/;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 900s;
        proxy_send_timeout 900s;

        # SSE specific settings
        proxy_buffering off;
        proxy_cache off;
    }

    # WebSocket support
    location /socket.io/ {
        proxy_pass http://127.0.0.1:8080/socket.io/;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        proxy_read_timeout 900s;
        proxy_send_timeout 900s;
    }

    # Webhooks for integrations (WhatsApp, etc)
    location /v1/ {
        proxy_pass http://127.0.0.1:8080/v1/;

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;

        proxy_read_timeout 30s;
        proxy_connect_timeout 30s;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        font/eot
        font/opentype
        font/otf
        image/svg+xml;

    # Logs
    access_log /var/log/nginx/kroniq_access.log;
    error_log /var/log/nginx/kroniq_error.log;
}

# www redirect to non-www
server {
    listen 443 ssl;
    server_name www.kroniq.io;
    ssl_certificate /etc/ssl/certs/cloudflare-kroniq.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare-kroniq.key;
    return 301 https://kroniq.io$request_uri;
}