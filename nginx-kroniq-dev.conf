# nginx-kroniq-dev.conf
# Development mode i√ßin - Frontend 4200, Backend 3000

server {
    listen 80;
    server_name kroniq.io www.kroniq.io;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name kroniq.io www.kroniq.io;

    # SSL Certificates
    ssl_certificate /etc/ssl/certs/cloudflare-kroniq.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare-kroniq.key;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    server_tokens off;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Cloudflare Real IP
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    real_ip_header CF-Connecting-IP;

    # Client settings
    client_max_body_size 100m;

    # API endpoints - Backend on port 3000 (maps /api/ to /v1/)
    location /api/ {
        proxy_pass http://127.0.0.1:3000/v1/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 900s;
        proxy_send_timeout 900s;
        proxy_buffering off;
        proxy_cache off;
    }

    # WebSocket support - Backend port 3000
    location /socket.io/ {
        proxy_pass http://127.0.0.1:3000/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 900s;
        proxy_send_timeout 900s;
    }

    # Webhooks - Backend port 3000
    location /v1/ {
        proxy_pass http://127.0.0.1:3000/v1/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_read_timeout 30s;
        proxy_connect_timeout 30s;
    }

    # Frontend - Vite dev server on port 4200
    location / {
        proxy_pass http://127.0.0.1:4200;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 900s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 900s;
        proxy_buffering off;
    }

    # Vite specific paths
    location /@vite/ {
        proxy_pass http://127.0.0.1:4200;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /@react-refresh {
        proxy_pass http://127.0.0.1:4200;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /@vite-plugin-checker-runtime {
        proxy_pass http://127.0.0.1:4200;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Logs
    access_log /var/log/nginx/kroniq_dev_access.log;
    error_log /var/log/nginx/kroniq_dev_error.log;
}

# www redirect to non-www
server {
    listen 443 ssl;
    server_name www.kroniq.io;
    ssl_certificate /etc/ssl/certs/cloudflare-kroniq.pem;
    ssl_certificate_key /etc/ssl/private/cloudflare-kroniq.key;
    return 301 https://kroniq.io$request_uri;
}